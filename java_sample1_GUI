/* Program will read a file and display the number of occurrences of numbers 0-9 in the file */
import java.io.File;
import java.io.FileNotFoundException;
import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;

import java.util.Scanner;

public class Ch5PA2 extends JFrame
{
	private int[] counts = new int[10];
	private JTextField jtf = new JTextField(20); //create a text field in which we type the name of the file that is to be read
	private Histogram display = new Histogram();
	//the default constructor method sets the layout of the frame
	public Ch5PA2 ()
	{
		display.setBorder(new LineBorder(Color.red, 1));
		
		JPanel bottomPanel = new JPanel();
		bottomPanel.setLayout(new BorderLayout());
		bottomPanel.add(new JLabel("Text File"), BorderLayout.WEST);
		bottomPanel.add(jtf, BorderLayout.CENTER);
		
		//add everything to the frame (new JLabel, histogram, and bottomPanel)
		setLayout(new BorderLayout()); //this line of code isn't really needed since JFrame's default layout is BorderLayout
		add(new JLabel("Enter the name and path of a file you wish to read", SwingConstants.CENTER), BorderLayout.NORTH);
		add(display, BorderLayout.CENTER);
		add(bottomPanel, BorderLayout.SOUTH);
		
		jtf.addActionListener(new Listener());
	}
	//the inner Listener class will handle the events
	class Listener implements ActionListener
	{
		public void actionPerformed(ActionEvent e)
		{
			//reset counts. Using a for loop we set all the initial values of the array to zero
			for (int i = 0; i < 10; i++)
				counts[i] = 0;
			//a try statement is used to read the file and display the Histogram
			try
			{
				//create file input stream
				Scanner input = new Scanner(new File(jtf.getText().trim())); //gets the name of the file from the field
				//the while loop goes through the contents of the file until the end of the file is reached
				while (input.hasNext())
				{
					String line = input.nextLine();
					//a for loop is used to go through each line
					for (int i = 0; i < line.length(); i++)
					{
						if (Character.isDigit(line.charAt(i)))
							counts[line.charAt(i) - '0']++;
					}
				}
				//the bar is displayed, depending on the number of times the number was displayed
				display.showHistogram(counts);
			}
			catch (FileNotFoundException ex)
			{
				System.out.println("File not found: " + jtf.getText().trim());
			}
		}
	}
	public static void main(String[] args)
	{
		Ch5PA2 frame = new Ch5PA2 ();
		frame.setSize(500, 300);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setTitle("Chapter 5 PA 2");
		frame.setLocationRelativeTo(null); //center the frame
		frame.setVisible(true);
	}
}
